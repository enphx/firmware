#include "low_level/fastfunctions.h"
#include "low_level/cubicspline.h"
#include <cmath>

#define ATAN_KNOTS 10

#define PI 3.141592653589793238462643383279


float atan_knots[ATAN_KNOTS] = {
  0., 0.3, 0.9, 1.2, 1.5, 2.3, 3., 5., 8., 14.
};

float atan_coeffs[4][ATAN_KNOTS - 1] = {
  {-0.3258231769116426, -0.0037021723206767, 0.1162314179300622, 0.0660867003138992, 0.0342290868197962, 0.012894021139794, 0.0035098208956045, 0.0004300072919106, 0.0000923455120127},
  {0.0000000000000019, -0.2932408592204764, -0.2999047693976952, -0.1952964932606373, -0.135818462978129, -0.0536686546106179, -0.0265912102170505, -0.0055322848434237, -0.0016622192162285},
  {1.0008467341816043, 0.9128744764154618, 0.5569870992445592, 0.408426720447059, 0.3090922335754294, 0.1575025395044317, 0.1013206341250638, 0.0370736440041155, 0.0154901318251591},
  {0., 0.2914567944778671, 0.7328151017865066, 0.8760580505981934, 0.982793723247329, 1.1606689862534056, 1.2490457723982544, 1.373400766945016, 1.446441332248135}
};




#define ACOS_KNOTS 15

float acos_knots[ACOS_KNOTS] = {
-1., -0.99, -0.985, -0.95, -0.9, -0.85355339
, -0.62940952, 0., 0.62940952, 0.85355339, 0.9, 0.95
, 0.985, 0.99, 1.
};

float acos_coeffs[4][ACOS_KNOTS - 1] = {
  {
    -23231.66938671725, -23231.66938671686, -389.2182930764321,
    -52.833833235137604, -18.42959663610892, -3.0412728328315914,
    -0.2396126971892751, -0.2396126971892706, -3.0412728328316625,
    -18.429596636107686, -52.833833235138314, -389.21829307643503,
    -23231.669386717218, -23231.669386716894
  },
  {
    1099.2835865484146, 402.33350494689546, 53.85846414614152,
    12.990543373116132, 5.065468387845628, 2.4974915256016255,
    0.4524435381714195, -0.0000000000000014, -0.4524435381714106,
    -2.4974915256016406, -5.065468387845431, -12.990543373116102,
    -53.85846414614153, -402.33350494689967
  },
  {
    -22.82361625925512, -7.807445344301996, -5.526485498836807,
    -3.186770235662787, -2.2839696476147067, -1.932695798069187,
    -1.2714859366264002, -0.9867136664388261, -1.2714859366263982,
    -1.9326957980691926, -2.283969647614704, -3.1867702356627823,
    -5.526485498836811, -7.807445344302021
  },
  {
    3.141592653589793, 3.000053180265366, 2.968170332494189,
    2.824032224298272, 2.6905658417935308, 2.593564244830771,
    2.2515894279282884, 1.5707963267948966, 0.8900032256615048,
    0.5480284087590223, 0.4510268117962624, 0.3175604292915215,
    0.1734223210956046, 0.1415394733244273
  }
};


#define SIN_KNOTS 3

float sin_knots[SIN_KNOTS] = {
  0.0, 0.7853981633974483, 1.5707963267948966
};

float sin_cooeffs[4][SIN_KNOTS - 1] = {
  {-0.1551478172758809, -0.0663318154478009},
  {-0.0050683974900504, -0.3706268297208494},
  {1., 0.704929658551372},
  {0., 0.7071067811865475},
};


CubicSpline<ATAN_KNOTS> cs_atan = CubicSpline<ATAN_KNOTS>(atan_knots, atan_coeffs);
CubicSpline<ACOS_KNOTS> cs_acos = CubicSpline<ACOS_KNOTS>(acos_knots, acos_coeffs);
CubicSpline<SIN_KNOTS> cs_sin = CubicSpline<SIN_KNOTS>(sin_knots, sin_cooeffs);

float atan_spl(float x) {
  int sign = 1;
  if (x < 0) {
    x = -x;
    sign = -1;
  }

  return (float)sign * cs_atan.eval(x);
}

float acos_spl(float x) {
  return cs_acos.eval(x);
}

float fast_sin(float x) {
  float mod_2_pi = fmod(x, 2 * PI);
  float mod_pi = fmod(x, PI);

  mod_2_pi = mod_2_pi < 0 ? mod_2_pi + 2 * PI : mod_2_pi;
  mod_pi = mod_pi < 0 ? mod_pi + PI : mod_pi;


  x = mod_pi < PI/2 ? mod_pi : PI - mod_pi;

  return cs_sin.eval(x) * (mod_2_pi < PI ? 1 : -1);
}

float fast_cos(float x) {
  return fast_sin(x + PI/2);
}
